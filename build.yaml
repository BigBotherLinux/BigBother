---
- name: Download and create build folders
  hosts: localhost
  gather_facts: false
  tags: extract
  vars_files:
    - ./build_vars.yaml

  tasks:
    - name: Create build folders
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ build_folder }}"
        - "{{ download_folder }}/memtest86"
        - "{{ download_folder }}/isolinux"
        - "{{ chroot_folder }}"

    - name: Bootstrap arch
      become: yes
      ansible.builtin.command:
        cmd: "arch-bootstrap/arch-bootstrap.sh {{ chroot_folder }}/"
        creates: "{{ chroot_folder }}/bin/sh"

    - name: Copy scripts from src folder to chroot env
      tags: debug
      become: yes
      ansible.posix.synchronize:
        src: ./src
        dest: "{{ chroot_folder }}"
        checksum: yes

    - name: "Copy build_vars"
      tags: debug
      become: yes
      ansible.builtin.copy:
        src: "build_vars.yaml"
        dest: "{{ chroot_folder }}/src/build_vars.yaml"
        remote_src: yes

- name: Prepare chroot
  hosts: localhost
  tags: chroot
  become: yes
  vars_files:
    - ./build_vars.yaml
  tasks:
    - name: mount chroot environment and run shell
      block:
        - name: Mount /run
          tags: debug
          ansible.builtin.command:
            cmd: mount -o bind /run/ {{ chroot_folder }}/run
            creates: "{{ chroot_folder }}/run/udev"

        - name: Mount /dev
          tags: debug
          ansible.builtin.command:
            cmd: mount --bind /dev/ {{ chroot_folder }}/dev
            creates: "{{ chroot_folder }}/dev/cpu"

        - name: "Chroot: Mount dirs" # TODO: Mount from ansible instead
          tags: debug
          ansible.builtin.shell: chroot {{ chroot_folder }} /src/mount.sh

        - name: "Chroot: Run Main script"
          ansible.builtin.shell: chroot {{ chroot_folder }} /src/install_preq.sh
          register: mainout

        - name: debug
          ansible.builtin.debug: var=mainout.stdout_lines

      always:
        - name: Umount /proc
          retries: 3
          delay: 3
          tags: unmount
          ansible.builtin.command:
            cmd: umount {{ chroot_folder }}/proc -l
            removes: "{{ chroot_folder }}/proc/cpuinfo"

        - name: Umount /sys
          retries: 3
          delay: 3
          tags: unmount
          ansible.builtin.command:
            cmd: umount {{ chroot_folder }}/sys
            removes: "{{ chroot_folder }}/sys/bus/"

        - name: Umount /run
          retries: 3
          delay: 3
          tags: unmount
          ansible.builtin.command:
            cmd: umount {{ chroot_folder }}/run
            removes: "{{ chroot_folder }}/run/user"

        - name: Umount /dev/pts
          retries: 3
          delay: 3
          tags: unmount
          ignore_errors: true
          ansible.builtin.command:
            cmd: umount {{ chroot_folder }}/dev/pts -l
            removes: "{{ chroot_folder }}/dev/pts/ptmx"

        - name: Umount /dev
          retries: 3
          delay: 3
          tags: unmount
          ansible.builtin.command:
            cmd: umount {{ chroot_folder }}/dev -l
            removes: "{{ chroot_folder }}/dev/cpu"
